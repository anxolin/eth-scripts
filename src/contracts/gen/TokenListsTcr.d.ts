/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, Overrides, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface TokenListsTcrInterface extends ethers.utils.Interface {
  functions: {
    'addList(string)': FunctionFragment
    'addTokens(uint256,address[])': FunctionFragment
    'getExternalBalances(address,address[])': FunctionFragment
    'getTokens(uint256)': FunctionFragment
    'getTokensData(address[])': FunctionFragment
    'getTokensRange(uint256,uint256,uint256)': FunctionFragment
    'isTokenActive(uint256,address)': FunctionFragment
    'listCount()': FunctionFragment
    'owner()': FunctionFragment
    'removeTokens(uint256,address[])': FunctionFragment
    'renounceOwnership()': FunctionFragment
    'tcrs(uint256)': FunctionFragment
    'transferOwnership(address)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'addList', values: [string]): string
  encodeFunctionData(functionFragment: 'addTokens', values: [BigNumberish, string[]]): string
  encodeFunctionData(functionFragment: 'getExternalBalances', values: [string, string[]]): string
  encodeFunctionData(functionFragment: 'getTokens', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'getTokensData', values: [string[]]): string
  encodeFunctionData(functionFragment: 'getTokensRange', values: [BigNumberish, BigNumberish, BigNumberish]): string
  encodeFunctionData(functionFragment: 'isTokenActive', values: [BigNumberish, string]): string
  encodeFunctionData(functionFragment: 'listCount', values?: undefined): string
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string
  encodeFunctionData(functionFragment: 'removeTokens', values: [BigNumberish, string[]]): string
  encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
  encodeFunctionData(functionFragment: 'tcrs', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'transferOwnership', values: [string]): string

  decodeFunctionResult(functionFragment: 'addList', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'addTokens', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getExternalBalances', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getTokens', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getTokensData', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getTokensRange', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'isTokenActive', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'listCount', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'removeTokens', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'tcrs', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result

  events: {
    'AddList(uint256,string)': EventFragment
    'AddToken(uint256,address)': EventFragment
    'OwnershipTransferred(address,address)': EventFragment
    'RemoveToken(uint256,address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'AddList'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'AddToken'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RemoveToken'): EventFragment
}

export class TokenListsTcr extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: TokenListsTcrInterface

  functions: {
    addList(_listName: string, overrides?: Overrides): Promise<ContractTransaction>

    'addList(string)'(_listName: string, overrides?: Overrides): Promise<ContractTransaction>

    addTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<ContractTransaction>

    'addTokens(uint256,address[])'(
      _listId: BigNumberish,
      _tokens: string[],
      overrides?: Overrides,
    ): Promise<ContractTransaction>

    getExternalBalances(
      _trader: string,
      _assetAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber[]
    }>

    'getExternalBalances(address,address[])'(
      _trader: string,
      _assetAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber[]
    }>

    getTokens(
      _listId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string[]
    }>

    'getTokens(uint256)'(
      _listId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string[]
    }>

    getTokensData(
      _tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      names: string[]
      symbols: string[]
      decimals: BigNumber[]
      0: string[]
      1: string[]
      2: BigNumber[]
    }>

    'getTokensData(address[])'(
      _tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      names: string[]
      symbols: string[]
      decimals: BigNumber[]
      0: string[]
      1: string[]
      2: BigNumber[]
    }>

    getTokensRange(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      tokensRange: string[]
      0: string[]
    }>

    'getTokensRange(uint256,uint256,uint256)'(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      tokensRange: string[]
      0: string[]
    }>

    isTokenActive(
      _listId: BigNumberish,
      _token: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    'isTokenActive(uint256,address)'(
      _listId: BigNumberish,
      _token: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    listCount(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'listCount()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    owner(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'owner()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    removeTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<ContractTransaction>

    'removeTokens(uint256,address[])'(
      _listId: BigNumberish,
      _tokens: string[],
      overrides?: Overrides,
    ): Promise<ContractTransaction>

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>

    'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

    tcrs(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      listId: BigNumber
      listName: string
      activeTokenCount: BigNumber
      0: BigNumber
      1: string
      2: BigNumber
    }>

    'tcrs(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      listId: BigNumber
      listName: string
      activeTokenCount: BigNumber
      0: BigNumber
      1: string
      2: BigNumber
    }>

    transferOwnership(newOwner: string, overrides?: Overrides): Promise<ContractTransaction>

    'transferOwnership(address)'(newOwner: string, overrides?: Overrides): Promise<ContractTransaction>
  }

  addList(_listName: string, overrides?: Overrides): Promise<ContractTransaction>

  'addList(string)'(_listName: string, overrides?: Overrides): Promise<ContractTransaction>

  addTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<ContractTransaction>

  'addTokens(uint256,address[])'(
    _listId: BigNumberish,
    _tokens: string[],
    overrides?: Overrides,
  ): Promise<ContractTransaction>

  getExternalBalances(_trader: string, _assetAddresses: string[], overrides?: CallOverrides): Promise<BigNumber[]>

  'getExternalBalances(address,address[])'(
    _trader: string,
    _assetAddresses: string[],
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>

  getTokens(_listId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

  'getTokens(uint256)'(_listId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

  getTokensData(
    _tokens: string[],
    overrides?: CallOverrides,
  ): Promise<{
    names: string[]
    symbols: string[]
    decimals: BigNumber[]
    0: string[]
    1: string[]
    2: BigNumber[]
  }>

  'getTokensData(address[])'(
    _tokens: string[],
    overrides?: CallOverrides,
  ): Promise<{
    names: string[]
    symbols: string[]
    decimals: BigNumber[]
    0: string[]
    1: string[]
    2: BigNumber[]
  }>

  getTokensRange(
    _listId: BigNumberish,
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string[]>

  'getTokensRange(uint256,uint256,uint256)'(
    _listId: BigNumberish,
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string[]>

  isTokenActive(_listId: BigNumberish, _token: string, overrides?: CallOverrides): Promise<boolean>

  'isTokenActive(uint256,address)'(_listId: BigNumberish, _token: string, overrides?: CallOverrides): Promise<boolean>

  listCount(overrides?: CallOverrides): Promise<BigNumber>

  'listCount()'(overrides?: CallOverrides): Promise<BigNumber>

  owner(overrides?: CallOverrides): Promise<string>

  'owner()'(overrides?: CallOverrides): Promise<string>

  removeTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<ContractTransaction>

  'removeTokens(uint256,address[])'(
    _listId: BigNumberish,
    _tokens: string[],
    overrides?: Overrides,
  ): Promise<ContractTransaction>

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>

  'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

  tcrs(
    arg0: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    listId: BigNumber
    listName: string
    activeTokenCount: BigNumber
    0: BigNumber
    1: string
    2: BigNumber
  }>

  'tcrs(uint256)'(
    arg0: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    listId: BigNumber
    listName: string
    activeTokenCount: BigNumber
    0: BigNumber
    1: string
    2: BigNumber
  }>

  transferOwnership(newOwner: string, overrides?: Overrides): Promise<ContractTransaction>

  'transferOwnership(address)'(newOwner: string, overrides?: Overrides): Promise<ContractTransaction>

  callStatic: {
    addList(_listName: string, overrides?: CallOverrides): Promise<BigNumber>

    'addList(string)'(_listName: string, overrides?: CallOverrides): Promise<BigNumber>

    addTokens(_listId: BigNumberish, _tokens: string[], overrides?: CallOverrides): Promise<void>

    'addTokens(uint256,address[])'(_listId: BigNumberish, _tokens: string[], overrides?: CallOverrides): Promise<void>

    getExternalBalances(_trader: string, _assetAddresses: string[], overrides?: CallOverrides): Promise<BigNumber[]>

    'getExternalBalances(address,address[])'(
      _trader: string,
      _assetAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>

    getTokens(_listId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

    'getTokens(uint256)'(_listId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

    getTokensData(
      _tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      names: string[]
      symbols: string[]
      decimals: BigNumber[]
      0: string[]
      1: string[]
      2: BigNumber[]
    }>

    'getTokensData(address[])'(
      _tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      names: string[]
      symbols: string[]
      decimals: BigNumber[]
      0: string[]
      1: string[]
      2: BigNumber[]
    }>

    getTokensRange(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string[]>

    'getTokensRange(uint256,uint256,uint256)'(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string[]>

    isTokenActive(_listId: BigNumberish, _token: string, overrides?: CallOverrides): Promise<boolean>

    'isTokenActive(uint256,address)'(_listId: BigNumberish, _token: string, overrides?: CallOverrides): Promise<boolean>

    listCount(overrides?: CallOverrides): Promise<BigNumber>

    'listCount()'(overrides?: CallOverrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<string>

    'owner()'(overrides?: CallOverrides): Promise<string>

    removeTokens(_listId: BigNumberish, _tokens: string[], overrides?: CallOverrides): Promise<void>

    'removeTokens(uint256,address[])'(
      _listId: BigNumberish,
      _tokens: string[],
      overrides?: CallOverrides,
    ): Promise<void>

    renounceOwnership(overrides?: CallOverrides): Promise<void>

    'renounceOwnership()'(overrides?: CallOverrides): Promise<void>

    tcrs(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      listId: BigNumber
      listName: string
      activeTokenCount: BigNumber
      0: BigNumber
      1: string
      2: BigNumber
    }>

    'tcrs(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      listId: BigNumber
      listName: string
      activeTokenCount: BigNumber
      0: BigNumber
      1: string
      2: BigNumber
    }>

    transferOwnership(newOwner: string, overrides?: CallOverrides): Promise<void>

    'transferOwnership(address)'(newOwner: string, overrides?: CallOverrides): Promise<void>
  }

  filters: {
    AddList(listId: null, listName: null): EventFilter

    AddToken(listId: null, token: null): EventFilter

    OwnershipTransferred(previousOwner: string | null, newOwner: string | null): EventFilter

    RemoveToken(listId: null, token: null): EventFilter
  }

  estimateGas: {
    addList(_listName: string, overrides?: Overrides): Promise<BigNumber>

    'addList(string)'(_listName: string, overrides?: Overrides): Promise<BigNumber>

    addTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<BigNumber>

    'addTokens(uint256,address[])'(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<BigNumber>

    getExternalBalances(_trader: string, _assetAddresses: string[], overrides?: CallOverrides): Promise<BigNumber>

    'getExternalBalances(address,address[])'(
      _trader: string,
      _assetAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getTokens(_listId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getTokens(uint256)'(_listId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    getTokensData(_tokens: string[], overrides?: CallOverrides): Promise<BigNumber>

    'getTokensData(address[])'(_tokens: string[], overrides?: CallOverrides): Promise<BigNumber>

    getTokensRange(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    'getTokensRange(uint256,uint256,uint256)'(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    isTokenActive(_listId: BigNumberish, _token: string, overrides?: CallOverrides): Promise<BigNumber>

    'isTokenActive(uint256,address)'(
      _listId: BigNumberish,
      _token: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    listCount(overrides?: CallOverrides): Promise<BigNumber>

    'listCount()'(overrides?: CallOverrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<BigNumber>

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>

    removeTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<BigNumber>

    'removeTokens(uint256,address[])'(
      _listId: BigNumberish,
      _tokens: string[],
      overrides?: Overrides,
    ): Promise<BigNumber>

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>

    'renounceOwnership()'(overrides?: Overrides): Promise<BigNumber>

    tcrs(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'tcrs(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    transferOwnership(newOwner: string, overrides?: Overrides): Promise<BigNumber>

    'transferOwnership(address)'(newOwner: string, overrides?: Overrides): Promise<BigNumber>
  }

  populateTransaction: {
    addList(_listName: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'addList(string)'(_listName: string, overrides?: Overrides): Promise<PopulatedTransaction>

    addTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<PopulatedTransaction>

    'addTokens(uint256,address[])'(
      _listId: BigNumberish,
      _tokens: string[],
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>

    getExternalBalances(
      _trader: string,
      _assetAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    'getExternalBalances(address,address[])'(
      _trader: string,
      _assetAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getTokens(_listId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getTokens(uint256)'(_listId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    getTokensData(_tokens: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getTokensData(address[])'(_tokens: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    getTokensRange(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    'getTokensRange(uint256,uint256,uint256)'(
      _listId: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    isTokenActive(_listId: BigNumberish, _token: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'isTokenActive(uint256,address)'(
      _listId: BigNumberish,
      _token: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    listCount(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'listCount()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    removeTokens(_listId: BigNumberish, _tokens: string[], overrides?: Overrides): Promise<PopulatedTransaction>

    'removeTokens(uint256,address[])'(
      _listId: BigNumberish,
      _tokens: string[],
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>

    'renounceOwnership()'(overrides?: Overrides): Promise<PopulatedTransaction>

    tcrs(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'tcrs(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    transferOwnership(newOwner: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'transferOwnership(address)'(newOwner: string, overrides?: Overrides): Promise<PopulatedTransaction>
  }
}
