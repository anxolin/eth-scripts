/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { DutchxHelper } from "../DutchxHelper";

export class DutchxHelper__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchxHelper {
    return new Contract(address, _abi, signerOrProvider) as DutchxHelper;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "auctionSellTokens",
        type: "address[]",
      },
      {
        name: "auctionBuyTokens",
        type: "address[]",
      },
      {
        name: "user",
        type: "address",
      },
    ],
    name: "getSellerBalancesOfCurrentAuctions",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getRunningTokenPairs",
    outputs: [
      {
        name: "tokens1",
        type: "address[]",
      },
      {
        name: "tokens2",
        type: "address[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "auctionSellTokens",
        type: "address[]",
      },
      {
        name: "auctionBuyTokens",
        type: "address[]",
      },
      {
        name: "user",
        type: "address",
      },
    ],
    name: "getBuyerBalancesOfCurrentAuctions",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "dx",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "auctionSellToken",
        type: "address",
      },
      {
        name: "auctionBuyToken",
        type: "address",
      },
      {
        name: "user",
        type: "address",
      },
      {
        name: "lastNAuctions",
        type: "uint256",
      },
    ],
    name: "getIndicesWithClaimableTokensForBuyers",
    outputs: [
      {
        name: "indices",
        type: "uint256[]",
      },
      {
        name: "usersBalances",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "auctionSellToken",
        type: "address",
      },
      {
        name: "auctionBuyToken",
        type: "address",
      },
      {
        name: "user",
        type: "address",
      },
      {
        name: "lastNAuctions",
        type: "uint256",
      },
    ],
    name: "getIndicesWithClaimableTokensForSellers",
    outputs: [
      {
        name: "indices",
        type: "uint256[]",
      },
      {
        name: "usersBalances",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_dx",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
];
