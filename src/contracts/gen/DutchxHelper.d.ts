/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface DutchxHelperInterface extends ethers.utils.Interface {
  functions: {
    'getSellerBalancesOfCurrentAuctions(address[],address[],address)': FunctionFragment
    'getRunningTokenPairs(address[])': FunctionFragment
    'getBuyerBalancesOfCurrentAuctions(address[],address[],address)': FunctionFragment
    'dx()': FunctionFragment
    'getIndicesWithClaimableTokensForBuyers(address,address,address,uint256)': FunctionFragment
    'getIndicesWithClaimableTokensForSellers(address,address,address,uint256)': FunctionFragment
  }

  encodeFunctionData(
    functionFragment: 'getSellerBalancesOfCurrentAuctions',
    values: [string[], string[], string],
  ): string
  encodeFunctionData(functionFragment: 'getRunningTokenPairs', values: [string[]]): string
  encodeFunctionData(
    functionFragment: 'getBuyerBalancesOfCurrentAuctions',
    values: [string[], string[], string],
  ): string
  encodeFunctionData(functionFragment: 'dx', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'getIndicesWithClaimableTokensForBuyers',
    values: [string, string, string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'getIndicesWithClaimableTokensForSellers',
    values: [string, string, string, BigNumberish],
  ): string

  decodeFunctionResult(functionFragment: 'getSellerBalancesOfCurrentAuctions', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getRunningTokenPairs', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getBuyerBalancesOfCurrentAuctions', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'dx', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getIndicesWithClaimableTokensForBuyers', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getIndicesWithClaimableTokensForSellers', data: BytesLike): Result

  events: {}
}

export class DutchxHelper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: DutchxHelperInterface

  functions: {
    getSellerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber[]
    }>

    'getSellerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber[]
    }>

    getRunningTokenPairs(
      tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      tokens1: string[]
      tokens2: string[]
      0: string[]
      1: string[]
    }>

    'getRunningTokenPairs(address[])'(
      tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      tokens1: string[]
      tokens2: string[]
      0: string[]
      1: string[]
    }>

    getBuyerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber[]
    }>

    'getBuyerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber[]
    }>

    dx(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'dx()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    getIndicesWithClaimableTokensForBuyers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>

    'getIndicesWithClaimableTokensForBuyers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>

    getIndicesWithClaimableTokensForSellers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>

    'getIndicesWithClaimableTokensForSellers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>
  }

  getSellerBalancesOfCurrentAuctions(
    auctionSellTokens: string[],
    auctionBuyTokens: string[],
    user: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>

  'getSellerBalancesOfCurrentAuctions(address[],address[],address)'(
    auctionSellTokens: string[],
    auctionBuyTokens: string[],
    user: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>

  getRunningTokenPairs(
    tokens: string[],
    overrides?: CallOverrides,
  ): Promise<{
    tokens1: string[]
    tokens2: string[]
    0: string[]
    1: string[]
  }>

  'getRunningTokenPairs(address[])'(
    tokens: string[],
    overrides?: CallOverrides,
  ): Promise<{
    tokens1: string[]
    tokens2: string[]
    0: string[]
    1: string[]
  }>

  getBuyerBalancesOfCurrentAuctions(
    auctionSellTokens: string[],
    auctionBuyTokens: string[],
    user: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>

  'getBuyerBalancesOfCurrentAuctions(address[],address[],address)'(
    auctionSellTokens: string[],
    auctionBuyTokens: string[],
    user: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>

  dx(overrides?: CallOverrides): Promise<string>

  'dx()'(overrides?: CallOverrides): Promise<string>

  getIndicesWithClaimableTokensForBuyers(
    auctionSellToken: string,
    auctionBuyToken: string,
    user: string,
    lastNAuctions: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    indices: BigNumber[]
    usersBalances: BigNumber[]
    0: BigNumber[]
    1: BigNumber[]
  }>

  'getIndicesWithClaimableTokensForBuyers(address,address,address,uint256)'(
    auctionSellToken: string,
    auctionBuyToken: string,
    user: string,
    lastNAuctions: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    indices: BigNumber[]
    usersBalances: BigNumber[]
    0: BigNumber[]
    1: BigNumber[]
  }>

  getIndicesWithClaimableTokensForSellers(
    auctionSellToken: string,
    auctionBuyToken: string,
    user: string,
    lastNAuctions: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    indices: BigNumber[]
    usersBalances: BigNumber[]
    0: BigNumber[]
    1: BigNumber[]
  }>

  'getIndicesWithClaimableTokensForSellers(address,address,address,uint256)'(
    auctionSellToken: string,
    auctionBuyToken: string,
    user: string,
    lastNAuctions: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    indices: BigNumber[]
    usersBalances: BigNumber[]
    0: BigNumber[]
    1: BigNumber[]
  }>

  callStatic: {
    getSellerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>

    'getSellerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>

    getRunningTokenPairs(
      tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      tokens1: string[]
      tokens2: string[]
      0: string[]
      1: string[]
    }>

    'getRunningTokenPairs(address[])'(
      tokens: string[],
      overrides?: CallOverrides,
    ): Promise<{
      tokens1: string[]
      tokens2: string[]
      0: string[]
      1: string[]
    }>

    getBuyerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>

    'getBuyerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>

    dx(overrides?: CallOverrides): Promise<string>

    'dx()'(overrides?: CallOverrides): Promise<string>

    getIndicesWithClaimableTokensForBuyers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>

    'getIndicesWithClaimableTokensForBuyers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>

    getIndicesWithClaimableTokensForSellers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>

    'getIndicesWithClaimableTokensForSellers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      indices: BigNumber[]
      usersBalances: BigNumber[]
      0: BigNumber[]
      1: BigNumber[]
    }>
  }

  filters: {}

  estimateGas: {
    getSellerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    'getSellerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getRunningTokenPairs(tokens: string[], overrides?: CallOverrides): Promise<BigNumber>

    'getRunningTokenPairs(address[])'(tokens: string[], overrides?: CallOverrides): Promise<BigNumber>

    getBuyerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    'getBuyerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    dx(overrides?: CallOverrides): Promise<BigNumber>

    'dx()'(overrides?: CallOverrides): Promise<BigNumber>

    getIndicesWithClaimableTokensForBuyers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    'getIndicesWithClaimableTokensForBuyers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getIndicesWithClaimableTokensForSellers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    'getIndicesWithClaimableTokensForSellers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>
  }

  populateTransaction: {
    getSellerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    'getSellerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getRunningTokenPairs(tokens: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getRunningTokenPairs(address[])'(tokens: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    getBuyerBalancesOfCurrentAuctions(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    'getBuyerBalancesOfCurrentAuctions(address[],address[],address)'(
      auctionSellTokens: string[],
      auctionBuyTokens: string[],
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    dx(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'dx()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    getIndicesWithClaimableTokensForBuyers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    'getIndicesWithClaimableTokensForBuyers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getIndicesWithClaimableTokensForSellers(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    'getIndicesWithClaimableTokensForSellers(address,address,address,uint256)'(
      auctionSellToken: string,
      auctionBuyToken: string,
      user: string,
      lastNAuctions: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>
  }
}
